# ????????? Logging Spring Security ?????????

logging.level.org.springframework.security = DEBUG
logging.level.org.springframework.security.oauth2 = TRACE
logging.level.org.springframework.web = DEBUG
logging.level.tassproject.apigateway = DEBUG



logging.level.org.springframework.cloud.gateway = TRACE

logging.level.org.springframework.cloud.gateway.route = DEBUG

logging.level.tassproject.apigateway.filters = DEBUG


logging.level.reactor.netty = INFO  
logging.level.reactor.netty.http.client = DEBUG
logging.level.reactor.netty.http.server = DEBUG


logging.level.org.springframework.web.reactive = DEBUG
logging.level.org.springframework.web.server.adapter.HttpWebHandlerAdapter = TRACE


# RouteHandlerMapping, health, metrics ecc.
logging.level.org.springframework.boot.actuate.endpoint.web = DEBUG
logging.level.org.springframework.boot.actuate.gateway = DEBUG


# ????????? Spring Boot ?????????
spring.application.name=auth-service
server.port=${SERVER_PORT:8080}

# ????????? Datasource ?????????
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/mydatabase}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:myuser}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:secret}
spring.datasource.driver-class-name=org.postgresql.Driver

# ????????? JPA / Hibernate ?????????
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.default_schema=auth_service

# ????????? JWT Settings ?????????
jwt.secret=${JWT_SECRET:my_jwt_secret}
jwt.expiration=${JWT_EXPIRATION_MS:3600000}

# ????????? OAuth2 Google Registration ?????????
spring.security.oauth2.client.registration.google.client-id=1052773766792-14leidinpkl862i67o4k62ck8iqtqjrn.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.scope=openid,profile,email

# ????????? OAuth2 Google Provider Endpoints ?????????
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# ????????? Forward Headers & Actuator ?????????
server.forward-headers-strategy=native
management.endpoints.web.exposure.include=health,info
