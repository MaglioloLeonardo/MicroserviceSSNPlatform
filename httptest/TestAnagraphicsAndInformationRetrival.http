@hostname = localhost
@prescPort = 8081
@dispPort = 8082
@invPort = 8083
@pharmaPort = 8086

@doctorId       = c9205454-02a3-4712-bb2f-067334af2d05
@patientId      = 20000000-0000-0000-0000-000000000001
@pharmacistId   = 30000000-0000-0000-0000-000000000001
@pharmacyId     = 40000000-0000-0000-0000-000000000001
@drugId         = 52000000-0000-0000-0000-000000000005

title Tests HTTP diretti ai microservizi aggiunti


### 3) Chi sono? → `/api/v1/auth/me`
GET http://{{hostname}}:8080/api/v1/citizens/me
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJtZWRpY29AZW1haWwuaXQiLCJ2ZXIiOjEsInJvbGUiOlsiRE9DVE9SIl0sImlhdCI6MTc1MzE1NDQzNSwiZXhwIjoxNzUzMTU4MDM1LCJjaXRpemVuX2lkIjoiZDlhZDFiMzktNGQwNC00MzFlLTk1MGYtMTQwNDQxYzVmMjhjIn0.hNzaqVcwJWyGXaGTWpccZSxIQ5F_iByVxbwXlLvsnyQ
Accept: application/json

### ─────────── Patients Details (Doctor) ───────────
GET http://{{hostname}}:{{prescPort}}/api/v1/doctors/d9ad1b39-4d04-431e-950f-140441c5f28c/patients/details
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJtZWRpY29AZW1haWwuaXQiLCJ2ZXIiOjEsInJvbGUiOlsiRE9DVE9SIl0sImlhdCI6MTc1MzE1NDQzNSwiZXhwIjoxNzUzMTU4MDM1LCJjaXRpemVuX2lkIjoiZDlhZDFiMzktNGQwNC00MzFlLTk1MGYtMTQwNDQxYzVmMjhjIn0.hNzaqVcwJWyGXaGTWpccZSxIQ5F_iByVxbwXlLvsnyQ
Accept: application/json


### ─────────── Me ───────────
GET http://localhost:8080/api/v1/auth/me
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJtZWRpY29AZW1haWwuaXQiLCJ2ZXIiOjEsInJvbGUiOlsiRE9DVE9SIl0sImlhdCI6MTc1MzE1NDQzNSwiZXhwIjoxNzUzMTU4MDM1LCJjaXRpemVuX2lkIjoiZDlhZDFiMzktNGQwNC00MzFlLTk1MGYtMTQwNDQxYzVmMjhjIn0.hNzaqVcwJWyGXaGTWpccZSxIQ5F_iByVxbwXlLvsnyQ
Accept: application/json


> {%
    client.test("200 OK e lista di CitizenDTO", response.status === 200);
    const list = response.body;
    client.test("Ogni elemento ha id, cf, nome, cognome", list.every(p => p.id && p.cf && p.nome && p.cognome));
%}

### ──── Active Ingredients by Drug ────
GET http://{{hostname}}:8086/api/v1/drugs
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJtZWRpY29AbWVkaWNvLml0IiwidmVyIjoxMCwicm9sZSI6WyJET0NUT1IiXSwiaWF0IjoxNzUyOTQ0MzIzLCJleHAiOjE3NTI5NDc5MjMsImNpdGl6ZW5faWQiOiJjOTIwNTQ1NC0wMmEzLTQ3MTItYmIyZi0wNjczMzRhZjJkMDUifQ.hsfo1dnxVFflwvCFZdfTWXR-eHHhnGfJOR7Wl9rxFcY
Accept: application/json

> {%
    client.test("200 OK e array non vuoto", response.status === 200 && Array.isArray(response.body));
    client.test("Ogni ingrediente ha id e nome", response.body.every(i => i.id && i.nome));
%}

### ─────── Create Dispensation (Pharmacist) ───────
POST http://{{hostname}}:{{dispPort}}/api/v1/dispensations
Authorization: Bearer {{pharmacistToken}}
Content-Type: application/json

{
  "prescriptionId": "{{prescId}}",
  "dispensedBy":    "{{pharmacistId}}"
}
> {%
    client.test("201 Created", response.status === 201);
    client.global.set("dispId", response.body.id);
%}

### ──── Inspect Inventory (Pharmacist) ────
GET http://{{hostname}}:{{invPort}}/api/v1/pharmacies/{{pharmacyId}}/inventory
Authorization: Bearer {{pharmacistToken}}
Accept: application/json

> {%
    client.test("200 OK e lista inventario", response.status === 200);
    client.test("Ogni item ha drugId e availableQuantity", response.body.every(item => item.drugId && typeof item.availableQuantity === 'number'));
%}
