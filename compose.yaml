version: '3.8'

services:
  postgres:
    image: postgres:17.5
    container_name: postgres-db
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: secret
    volumes:
      - backend_pgdata:/var/lib/postgresql/data
      - ./postgres-init/init-schemas.sql:/docker-entrypoint-initdb.d/init-schemas.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      retries: 5
    restart: on-failure

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: myuser
      RABBITMQ_DEFAULT_PASS: secret
    volumes:
      - backend_rabbitmqdata:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      retries: 5
    restart: on-failure

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    image: tassproject/api-gateway:latest
    container_name: api-gateway
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mydatabase
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: secret
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_USERNAME: myuser
      SPRING_RABBITMQ_PASSWORD: secret
      SERVER_PORT: 8080
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8080/actuator/health || exit 1"]
      interval: 10s
      retries: 5
    restart: on-failure

  prescription-service:
    build:
      context: ./prescription-service
      dockerfile: Dockerfile
    image: tassproject/prescription-service:latest
    container_name: prescription-service
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mydatabase
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: secret
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_USERNAME: myuser
      SPRING_RABBITMQ_PASSWORD: secret
      SERVER_PORT: 8081
    ports:
      - "8081:8081"
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8081/actuator/health || exit 1"]
      interval: 10s
      retries: 5
    restart: on-failure

  dispensation-service:
    build:
      context: ./dispensation-service
      dockerfile: Dockerfile
    image: tassproject/dispensation-service:latest
    container_name: dispensation-service
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mydatabase
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: secret
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_USERNAME: myuser
      SPRING_RABBITMQ_PASSWORD: secret
      SERVER_PORT: 8082
    ports:
      - "8082:8082"
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8082/actuator/health || exit 1"]
      interval: 10s
      retries: 5
    restart: on-failure

  inventory-service:
    build:
      context: ./inventory-service
      dockerfile: Dockerfile
    image: tassproject/inventory-service:latest
    container_name: inventory-service
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mydatabase
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: secret
      SERVER_PORT: 8083
    ports:
      - "8083:8083"
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8083/actuator/health || exit 1"]
      interval: 10s
      retries: 5
    restart: on-failure

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    image: tassproject/notification-service:latest
    container_name: notification-service
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mydatabase
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: secret
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_USERNAME: myuser
      SPRING_RABBITMQ_PASSWORD: secret
      SERVER_PORT: 8084
    ports:
      - "8084:8084"
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8084/actuator/health || exit 1"]
      interval: 10s
      retries: 5
    restart: on-failure

volumes:
  backend_pgdata:
  backend_rabbitmqdata:
