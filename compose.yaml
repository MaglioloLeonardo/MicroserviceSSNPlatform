version: '3.8'

services:
  #────────────────────────────  DATABASE  ────────────────────────────#
  postgres:
    image: postgres:17.5
    container_name: postgres-db
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: secret
    volumes:
      - backend_pgdata:/var/lib/postgresql/data
      - ./postgres-init/init-schemas.sql:/docker-entrypoint-initdb.d/init-schemas.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      retries: 5
    restart: on-failure

  #───────────────────────────  MESSAGE BUS  ──────────────────────────#
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: myuser
      RABBITMQ_DEFAULT_PASS: secret
    volumes:
      - backend_rabbitmqdata:/var/lib/rabbitmq
    ports:
      - "5672:5672"     # AMQP
      - "15672:15672"   # Management UI
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      retries: 5
    restart: on-failure

  #─────────────────────────────  GATEWAY  ────────────────────────────#
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    image: tassproject/api-gateway:latest
    container_name: api-gateway
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      JWT_SECRET: "XQbpeStl7k3jq0WFDYpjfudEwpm/0D0j/H2t3uFX3FA="
      JWT_EXPIRATION_MS: 3600000
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mydatabase
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: secret
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_USERNAME: myuser
      SPRING_RABBITMQ_PASSWORD: secret
      SERVER_PORT: 8080          # il Gateway resta su 8080
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8080/actuator/health || exit 1"]
      interval: 10s
      retries: 5
    restart: on-failure

  #──────────────────────────  PRESCRIPTION  ──────────────────────────#
  prescription-service:
    build:
      context: ./prescription-service
      dockerfile: Dockerfile
    image: tassproject/prescription-service:latest
    container_name: prescription-service
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      JWT_SECRET: "XQbpeStl7k3jq0WFDYpjfudEwpm/0D0j/H2t3uFX3FA="
      JWT_EXPIRATION_MS: 3600000
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mydatabase
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: secret
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_USERNAME: myuser
      SPRING_RABBITMQ_PASSWORD: secret
      # (nessuna SERVER_PORT → Spring userà 8080 di default)
    ports:
      - "8081:8080"   # host 8081 → container 8080
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8080/actuator/health || exit 1"]
      interval: 10s
      retries: 5
    restart: on-failure

  #──────────────────────────  DISPENSATION  ──────────────────────────#
  dispensation-service:
    build:
      context: ./dispensation-service
      dockerfile: Dockerfile
    image: tassproject/dispensation-service:latest
    container_name: dispensation-service
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      JWT_SECRET: "XQbpeStl7k3jq0WFDYpjfudEwpm/0D0j/H2t3uFX3FA="
      JWT_EXPIRATION_MS: 3600000
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mydatabase
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: secret
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_USERNAME: myuser
      SPRING_RABBITMQ_PASSWORD: secret
    ports:
      - "8082:8080"
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8080/actuator/health || exit 1"]
      interval: 10s
      retries: 5
    restart: on-failure

  #────────────────────────────  INVENTORY  ────────────────────────────#
  inventory-service:
    build:
      context: ./inventory-service
      dockerfile: Dockerfile
    image: tassproject/inventory-service:latest
    container_name: inventory-service
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      JWT_SECRET: "XQbpeStl7k3jq0WFDYpjfudEwpm/0D0j/H2t3uFX3FA="
      JWT_EXPIRATION_MS: 3600000
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mydatabase
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: secret
    ports:
      - "8083:8080"
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8080/actuator/health || exit 1"]
      interval: 10s
      retries: 5
    restart: on-failure

  #───────────────────────────  NOTIFICATION  ──────────────────────────#
  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    image: tassproject/notification-service:latest
    container_name: notification-service
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      JWT_SECRET: "XQbpeStl7k3jq0WFDYpjfudEwpm/0D0j/H2t3uFX3FA="
      JWT_EXPIRATION_MS: 3600000
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mydatabase
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: secret
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_USERNAME: myuser
      SPRING_RABBITMQ_PASSWORD: secret
    ports:
      - "8084:8080"
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8080/actuator/health || exit 1"]
      interval: 10s
      retries: 5
    restart: on-failure

  #────────────────────────────  AUTHENTICATION  ────────────────────────#
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    image: tassproject/auth-service:latest
    container_name: auth-service
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mydatabase
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: secret
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_USERNAME: myuser
      SPRING_RABBITMQ_PASSWORD: secret
      JWT_SECRET: "XQbpeStl7k3jq0WFDYpjfudEwpm/0D0j/H2t3uFX3FA="
      JWT_EXPIRATION_MS: 3600000
      GOOGLE_CLIENT_ID: __fill__
      GOOGLE_CLIENT_SECRET: __fill__
      SERVER_PORT: 8080
    ports:
      - "8085:8080"   # host 8085 → container 8080
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: on-failure

#────────────────────────────────  VOLUMI  ─────────────────────────────#
volumes:
  backend_pgdata:
  backend_rabbitmqdata: